{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dilsh\\\\OneDrive\\\\Desktop\\\\Mini project\\\\Student_management_System\\\\frontend\\\\src\\\\Component\\\\StudentInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Button, TextField, Typography, Paper, Container, Box } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StudentInterface() {\n  _s();\n  const [studentName, setStudentName] = useState(\"\");\n  const [newpassword, setnewpassword] = useState(\"\");\n  const [newstudentage, setnewstudentage] = useState(\"\");\n  const [showUpdateForm, setShowUpdateForm] = useState(false);\n  const [newUsername, setNewUsername] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const navigate = u;\n  useEffect(() => {\n    // Retrieve the student's name from localStorage\n    const name = localStorage.getItem('StudentName');\n    if (name) {\n      setStudentName(name);\n    }\n  }, []);\n  const handleUpdateProfile = () => {\n    setShowUpdateForm(true);\n  };\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n\n    // Create an object to store the fields that should be updated\n    const updatedFields = {};\n    if (newUsername) updatedFields.newUsername = newUsername;\n    if (newstudentage) updatedFields.newage = newstudentage;\n    if (newpassword) updatedFields.newpassword = newpassword;\n    if (Object.keys(updatedFields).length === 0) {\n      setMessage(\"Please fill in at least one field to update.\");\n      return;\n    }\n    try {\n      const response = await axios.put(\"http://localhost:8070/student/updateprofile\", {\n        name: studentName,\n        ...updatedFields\n      });\n      if (response.data.status === \"Update successful\") {\n        setMessage(\"Profile updated successfully\");\n\n        // Update localStorage or state with new username if it was changed\n        if (newUsername) {\n          setStudentName(newUsername);\n          localStorage.setItem('StudentName', newUsername);\n        }\n        setShowUpdateForm(false); // Hide the form after successful update\n      } else {\n        setMessage(\"Failed to update profile\");\n      }\n    } catch (err) {\n      setMessage(\"An error occurred\");\n    }\n  };\n  const handleDeleteAccount = async () => {\n    try {\n      const response = await axios.delete(`http://localhost:8070/student/deleteaccount/${studentName}`);\n      if (response.data.status === \"Delete successful\") {\n        setMessage(\"Account deleted successfully\");\n        // Clear localStorage and redirect or take other necessary actions\n        localStorage.removeItem('StudentName');\n        navigate('/login'); // Redirect to login page after account deletion\n      } else {\n        setMessage(\"Failed to delete account\");\n      }\n    } catch (err) {\n      setMessage(\"An error occurred while deleting the account\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"student-interface\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: [\"Hi \", studentName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleUpdateProfile,\n          sx: {\n            mr: 2\n          },\n          children: \"Update Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: handleDeleteAccount,\n          children: \"Delete Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), showUpdateForm && /*#__PURE__*/_jsxDEV(Paper, {\n      className: \"update-profile-paper\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Update Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"New Username\",\n          variant: \"outlined\",\n          fullWidth: true,\n          margin: \"normal\",\n          value: newUsername,\n          onChange: e => setNewUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"New Age\",\n          variant: \"outlined\",\n          fullWidth: true,\n          margin: \"normal\",\n          value: newstudentage,\n          onChange: e => setnewstudentage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"New Password\",\n          variant: \"outlined\",\n          fullWidth: true,\n          margin: \"normal\",\n          value: newpassword,\n          onChange: e => setnewpassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), message && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      color: \"primary\",\n      style: {\n        marginTop: \"20px\"\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(StudentInterface, \"ENAezKW7rrwuQqiNew1NuC/Q3OI=\");\n_c = StudentInterface;\nexport default StudentInterface;\nvar _c;\n$RefreshReg$(_c, \"StudentInterface\");","map":{"version":3,"names":["React","useEffect","useState","Button","TextField","Typography","Paper","Container","Box","axios","jsxDEV","_jsxDEV","StudentInterface","_s","studentName","setStudentName","newpassword","setnewpassword","newstudentage","setnewstudentage","showUpdateForm","setShowUpdateForm","newUsername","setNewUsername","message","setMessage","navigate","u","name","localStorage","getItem","handleUpdateProfile","handleFormSubmit","e","preventDefault","updatedFields","newage","Object","keys","length","response","put","data","status","setItem","err","handleDeleteAccount","delete","removeItem","className","children","sx","display","alignItems","justifyContent","mb","variant","fileName","_jsxFileName","lineNumber","columnNumber","color","onClick","mr","onSubmit","label","fullWidth","margin","value","onChange","target","type","style","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/Dilsh/OneDrive/Desktop/Mini project/Student_management_System/frontend/src/Component/StudentInterface.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Button, TextField, Typography, Paper, Container, Box } from '@mui/material';\r\nimport axios from 'axios';\r\n\r\nfunction StudentInterface() {\r\n  const [studentName, setStudentName] = useState(\"\");\r\n  const [newpassword, setnewpassword] = useState(\"\");\r\n  const [newstudentage, setnewstudentage] = useState(\"\");\r\n  const [showUpdateForm, setShowUpdateForm] = useState(false);\r\n  const [newUsername, setNewUsername] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const navigate = u\r\n\r\n  useEffect(() => {\r\n    // Retrieve the student's name from localStorage\r\n    const name = localStorage.getItem('StudentName');\r\n    if (name) {\r\n      setStudentName(name);\r\n    }\r\n  }, []);\r\n\r\n  const handleUpdateProfile = () => {\r\n    setShowUpdateForm(true);\r\n  };\r\n\r\n  const handleFormSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Create an object to store the fields that should be updated\r\n    const updatedFields = {};\r\n\r\n    if (newUsername) updatedFields.newUsername = newUsername;\r\n    if (newstudentage) updatedFields.newage = newstudentage;\r\n    if (newpassword) updatedFields.newpassword = newpassword;\r\n\r\n    if (Object.keys(updatedFields).length === 0) {\r\n      setMessage(\"Please fill in at least one field to update.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.put(\"http://localhost:8070/student/updateprofile\", {\r\n        name: studentName,\r\n        ...updatedFields\r\n      });\r\n\r\n      if (response.data.status === \"Update successful\") {\r\n        setMessage(\"Profile updated successfully\");\r\n\r\n        // Update localStorage or state with new username if it was changed\r\n        if (newUsername) {\r\n          setStudentName(newUsername);\r\n          localStorage.setItem('StudentName', newUsername);\r\n        }\r\n\r\n        setShowUpdateForm(false); // Hide the form after successful update\r\n      } else {\r\n        setMessage(\"Failed to update profile\");\r\n      }\r\n    } catch (err) {\r\n      setMessage(\"An error occurred\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteAccount = async () => {\r\n    try {\r\n      const response = await axios.delete(`http://localhost:8070/student/deleteaccount/${studentName}`);\r\n      \r\n      if (response.data.status === \"Delete successful\") {\r\n        setMessage(\"Account deleted successfully\");\r\n        // Clear localStorage and redirect or take other necessary actions\r\n        localStorage.removeItem('StudentName');\r\n        navigate('/login'); // Redirect to login page after account deletion\r\n      } else {\r\n        setMessage(\"Failed to delete account\");\r\n      }\r\n    } catch (err) {\r\n      setMessage(\"An error occurred while deleting the account\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className='student-interface'>\r\n      <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', mb: 2 }}>\r\n        <Typography variant=\"h4\">\r\n          Hi {studentName}\r\n        </Typography>\r\n        <Box>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleUpdateProfile}\r\n            sx={{ mr: 2 }}\r\n          >\r\n            Update Profile\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onClick={handleDeleteAccount}\r\n          >\r\n            Delete Account\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n\r\n      {showUpdateForm && (\r\n        <Paper className='update-profile-paper'>\r\n          <Typography variant=\"h6\">\r\n            Update Profile\r\n          </Typography>\r\n          <form onSubmit={handleFormSubmit}>\r\n            <TextField\r\n              label=\"New Username\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              margin=\"normal\"\r\n              value={newUsername}\r\n              onChange={(e) => setNewUsername(e.target.value)}\r\n            />\r\n            <TextField\r\n              label=\"New Age\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              margin=\"normal\"\r\n              value={newstudentage}\r\n              onChange={(e) => setnewstudentage(e.target.value)}\r\n            />\r\n            <TextField\r\n              label=\"New Password\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              margin=\"normal\"\r\n              value={newpassword}\r\n              onChange={(e) => setnewpassword(e.target.value)}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              Update\r\n            </Button>\r\n          </form>\r\n        </Paper>\r\n      )}\r\n\r\n      {message && (\r\n        <Typography variant=\"h6\" color=\"primary\" style={{ marginTop: \"20px\" }}>\r\n          {message}\r\n        </Typography>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default StudentInterface;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}